{"version":3,"sources":["types/Filter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","TodoList","todos","activeTodo","setActiveTodo","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","filter","setFilter","query","setQuery","value","onChange","e","target","All","Active","Completed","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","userLoading","setUserLoading","useEffect","userId","finally","href","email","name","App","setTodos","todoLoading","setTodoLoading","filteredTodos","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6633d244.chunk.js","sourcesContent":["export enum Filter {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  activeTodo: Todo | null;\n  setActiveTodo: (currentTodo: Todo | null) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  activeTodo,\n  setActiveTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr data-cy=\"todo\" key={todo.id}>\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n\n            <p className={classNames(todo.completed\n              ? 'has-text-success'\n              : 'has-text-danger')}\n            >\n              {todo.title}\n            </p>\n          </td>\n\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => setActiveTodo(todo)}\n            >\n              <span className=\"icon\">\n                <i className={classNames('far', {\n                  'fa-eye': !(activeTodo?.id === todo.id),\n                  'fa-eye-slash': activeTodo?.id === todo.id,\n                })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport { Filter } from '../../types/Filter';\n\ntype Props = {\n  filter: Filter,\n  setFilter: (f: Filter) => void,\n  query: string,\n  setQuery: (q: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filter,\n  setFilter,\n  query,\n  setQuery,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filter}\n          onChange={(e) => setFilter(e.target.value as Filter)}\n        >\n          <option value={Filter.All}>All</option>\n          <option value={Filter.Active}>Active</option>\n          <option value={Filter.Completed}>Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuery('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  activeTodo: Todo;\n  setActiveTodo: (currentTodo: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ activeTodo, setActiveTodo }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [userLoading, setUserLoading] = useState(false);\n\n  useEffect(() => {\n    if (activeTodo.id) {\n      setUserLoading(true);\n    }\n\n    getUser(activeTodo.userId)\n      .then(setUser)\n      .finally(() => setUserLoading(false));\n  }, [activeTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {userLoading || !user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${activeTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setActiveTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {activeTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n\n              {activeTodo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { Filter } from './types/Filter';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todoLoading, setTodoLoading] = useState(false);\n  const [activeTodo, setActiveTodo] = useState<Todo | null>(null);\n  const [filter, setFilter] = useState<Filter>(Filter.All);\n  const [query, setQuery] = useState<string>('');\n\n  const filteredTodos = todos.filter(todo => {\n    switch (filter) {\n      case Filter.All:\n        return todo;\n      case Filter.Active:\n        return !todo.completed;\n      case Filter.Completed:\n        return todo.completed;\n      default:\n        return todo;\n    }\n  })\n    .filter(todo => todo.title.toLowerCase().includes(query.toLowerCase()));\n\n  useEffect(() => {\n    setTodoLoading(true);\n    getTodos()\n      .then(setTodos)\n      .finally(() => setTodoLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filter={filter}\n                setFilter={setFilter}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todoLoading && (\n                <Loader />\n              )}\n\n              {!todoLoading && !!todos.length && (\n                <TodoList\n                  todos={filteredTodos}\n                  activeTodo={activeTodo}\n                  setActiveTodo={setActiveTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {activeTodo && (\n        <TodoModal\n          activeTodo={activeTodo}\n          setActiveTodo={setActiveTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}